//Time: O (2 ^ n) Space: O(2 ^ n)
class Solution {
    public:
        vector<int> grayCode(int n) 
        {
            if (n == 0 || n > 32) {
                vector<int> result;
                return result;
            }
            if (n == 1) {
                vector<int> result;
                result.push_back(0);
                result.push_back(1);
                return result;
            }
            vector<int> lastResult = grayCode(n - 1);
            vector<int> result(1 << (n - 1), 0);
            for (int i = 0; i < lastResult.size(); ++i) {
                result[i] = lastResult[i];
            }
            for (int i = lastResult.size() - 1; i >= 0; --i) {
                result[2 * lastResult.size() - i] = (1 << n) + lastResult[i];
            }
            return result;
        }
};
